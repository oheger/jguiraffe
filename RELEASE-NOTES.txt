                           JGUIraffe Library
                              Version 1.4
                              Release Notes


INTRODUCTION
============

This document contains the release notes for this version of the JGUIraffe
library. JGUIraffe is a framework supporting the implementation of Java
desktop applications using concepts like declarative UI definition, action and
command objects, and dependency injection.

After a long phase of inactivity, this release has been published to make the
changes done in the code base available officially. As these changes include
both bug fixes and new features, the new version is set to 1.4.

In order to prepare the release, it was necessary to make the code base
buildable on a modern JDK. Especially the dependency to JavaFX makes this
somewhat problematic, as this library is no longer available in the JDK after
Java 1.8. This release was built with a JDK 11, and the corresponding JavaFX
version is used. Source and target compatibility has been set to Java 1.8.
Also, the Scala version used by the JavaFX module has been upgraded to 2.13.

Below is a list of all changes introduced by this release:

New features:
=============
* [https://github.com/oheger/jguiraffe/issues/47]
  JGUIraffe now publishes an artifact with the test classes of the core
  project. It contains dummy implementations for the central builder interfaces
  and can thus be useful for unit tests of applications based on the library.
  The test implementations have been improved in this respect.

* [https://github.com/oheger/jguiraffe/issues/46]
  Added support for dialogs for choosing files and directories.

* [https://github.com/oheger/jguiraffe/issues/45]
  The user configuration of an application is now written to disk only if it
  has been actually changed.

* [https://github.com/oheger/jguiraffe/issues/42]
  Improved the handling of the Escape key in windows. It is now possible to
  declare a button as cancel button. Pressing the Escape key in the window is
  then equivalent to clicking on this button.

* [https://github.com/oheger/jguiraffe/issues/41]
  Added a tag for exposing a variable from the Jelly context as bean.

* [https://github.com/oheger/jguiraffe/issues/39]
  Added a new shutdown() method to application which allows a forced shutdown.
  In this mode, shutdown listeners are not asked for permission.

Bug fixes
=========

* [https://github.com/oheger/jguiraffe/issues/44]
  JavaFX now supports widget handlers for groups of radio buttons.

* [https://github.com/oheger/jguiraffe/issues/43]
  The scroll width and height of Swing components that have a scroll pane can
  now be configured in the unit DLU.

* [https://github.com/oheger/jguiraffe/issues/31]
  Fixed dynamic growing of percent layouts when the content of controls
  contained was changed.

* [https://github.com/oheger/jguiraffe/issues/30]
  The Export-Package header of the OSGi bundle generated for the core project
  now includes impl packages. Some of them are useful for client bundles as
  well.

* [https://github.com/oheger/jguiraffe/issues/29]
  JavaFX windows now handle the closeable property correctly. The default
  values of windows flags like closeable, resizable, etc. have been changed
  from false to true. (In most cases, these features should be enabled.)

* [https://github.com/oheger/jguiraffe/issues/28]
  Fixed an update problem with JavaFX tables that only have a single row.

* [https://github.com/oheger/jguiraffe/issues/26]
  Made shutdown handling more consistent. It is ensured that the main window is
  closed exactly once, and that multiple invocations of shutdown() have no
  effect.

* [https://github.com/oheger/jguiraffe/issues/25]
  Handling of close notifications has been reworked for JavaFX windows. Window
  closed events are no longer sent when the window becomes invisible; they are
  sent when the window is actually closed, either by clicking the X button or
  by an invocation of the close() method.

* [https://github.com/oheger/jguiraffe/issues/24]
  JavaFX windows can now be assigned an icon.

* [https://github.com/oheger/jguiraffe/issues/23]
  JavaFX static text elements now handle icons correctly.

Other changes
=============

* [https://github.com/oheger/jguiraffe/issues/48]
  Make the project build again on a recent JDK. This required a number of
  updates in dependencies and plugins. The minimum supported JDK version has
  been upgraded to Java 1.8.

* [https://github.com/oheger/jguiraffe/issues/49]
  The JavaFX module now requires Scala 2.13.


                           JGUIraffe Library
                              Version 1.3.1
                              Release Notes


INTRODUCTION
============

This document contains the release notes for this version of the JGUIraffe
library. JGUIraffe is a framework supporting the implementation of Java
desktop applications using concepts like declarative UI definition, action and
command objects, and dependency injection.

As the minor version number change implies, the 1.3.1 release is just a bugfix
release containing a number of fixes and minor updates. The majority of fixes
is related to the JavaFX module: The JavaFX support introduced with version 1.3
had a bunch of problems with different UI controls. Many of them have now be
solved, so it is recommended to switch to this version when making use of the
JavaFX module.

Version 1.3.1 is binary and source compatible with version 1.3. Unfortunately,
the clirr report is currently not available; it had to be disabled because the
plugin does not support Java 8 as build environment.

The JGUIraffe core and the Swing modules require Java 1.5 or higher; the JavaFX
module is tested against JavaFX 2.2 which is shipped with Java 1.8 (it does not
use any Java 1.8 features though and can in theory run with Java 1.7). It is
compiled against Scala 2.11.

Below is a list of all changes introduced by this release:

BUG FIXES
=========
* [http://sourceforge.net/p/jguiraffe/bugs/22]
  Fixed a NullPointerException in selection handling of JavaFxTreeHandler.

* [http://sourceforge.net/p/jguiraffe/bugs/21]
  Labels rendered within a percent layout are given now a slightly greater
  width, so that the text is fully displayed.

* [http://sourceforge.net/p/jguiraffe/bugs/20]
  Application now offers a method for accessing the bean context that was
  created when the main window was constructed.

* [http://sourceforge.net/p/jguiraffe/bugs/19]
  The action tag now supports a new enabled attribute. This can be used to
  disable actions after their creation.

* [http://sourceforge.net/p/jguiraffe/bugs/18]
  JavaFxWindowManager now supports customizing JavaFX stage creation. For this
  purpose the new trait StageFactory was introduced. With DefaultStageFactory
  there is a default implementation which can be extended.

* [http://sourceforge.net/p/jguiraffe/bugs/17]
  FormController now offers a new method validateAndDisplayMessages() which can
  be used to trigger a validation with user feedback at any time. This is
  useful for instance for the implementation of an Apply button.

* [http://sourceforge.net/p/jguiraffe/bugs/16]
  It is now possible to add custom beans created dynamically by an application
  to the global bean context.

* [http://sourceforge.net/p/jguiraffe/bugs/15]
  Using the unit dlu in a JavaFX splitter component no longer causes an
  exception.

* [http://sourceforge.net/p/jguiraffe/bugs/14]
  JavaFX panels can now be assigned basic attributes like color or font.

* [http://sourceforge.net/p/jguiraffe/bugs/13]
  JavaFX tables now correctly evaluate the multi-selection flag.

* [http://sourceforge.net/p/jguiraffe/bugs/12]
  JavaFX labels can now be assigned an icon. The ClassCastException that
  occurred in this case has been fixed.

* [http://sourceforge.net/p/jguiraffe/bugs/11]
  The JavaFX application is now correctly set up so that the primary stage can
  be created successfully in JavaFX 8.

* [http://sourceforge.net/p/jguiraffe/bugs/10]
  The build of JGUIraffe is now possible with both Java 7 and Java 8.


OTHER CHANGES
=============
* The build of the JavaFX module is now faster because not for all tests a
  forked JVM has to be created.

Comprehensive documentation about the JGUIraffe library is available on
the project's web site
    http://jguiraffe.sourceforge.net/

A user's guide can be found at
    http://jguiraffe.sourceforge.net/jguiraffe/userguide/user_guide.html


                           JGUIraffe Library
                               Version 1.3
                              Release Notes


INTRODUCTION
============

This document contains the release notes for this version of the JGUIraffe
library. JGUIraffe is a framework supporting the implementation of Java
desktop applications using concepts like declarative UI definition, action and
command objects, and dependency injection.

The most striking feature in version 1.3 is support for JavaFX as an additional
platform supported by the library. This means that UI declarations processed by
JGUIraffe can be transformed into JavaFX applications in the same way as this
was supported formerly for Swing.

In order to achieve this and increase modularity, code specific to a target UI
platform was refactored out of the main jar artifact. There is now a core jar
with basic functionality of the JGUIraffe framework and several jars for
specific target platforms (currently Swing and JavaFX). When you update from
version 1.2 make sure that you add the correct platform-specific jar to the
classpath. (This is described in more detail in the new chapter "Project setup"
of the user's guide.)

Provided that both the core jar and a platform-specific jar are present in the
classpath, version 1.3 is binary compatible with version 1.2. The clirr report
shows some errors, but these are all caused by Swing-related classes moved to
the jar for the Swing platform. So an upgrade should be possible without
affecting a client application.

In addition to the main topic - JavaFX support -, some smaller fixes and
improvements have been implemented. A complete list of changes is provided
below:

NEW FEATURES
============
* [http://sourceforge.net/p/jguiraffe/feature-requests/7]
  JavaFX is now supported as target platform.

* [http://sourceforge.net/p/jguiraffe/feature-requests/6]
  Added the tag di:resource to resolve resources on the class path.

BUG FIXES
=========
* [http://sourceforge.net/p/jguiraffe/bugs/9]
  The default value of the canShrink property of PercentLayoutBase was
  changed from false to true. This is appropriate for the majority of
  use cases.

* [http://sourceforge.net/p/jguiraffe/bugs/8]
  SwingMessageOutput no longer allows HTML-based formatting. Leading and
  trailing html tags are removed from the message text.

* [http://sourceforge.net/p/jguiraffe/bugs/7]
  SwingMessageOutput now allows specifying a maximum line length.
  Message texts are processed so that no line exceeds the specified
  length. Line wrapping is enabled per default.

* [http://sourceforge.net/p/jguiraffe/bugs/6]
  The documentation of the MessageOutput interface was improved regarding
  the way the passed in message text is processed.

* [http://sourceforge.net/p/jguiraffe/bugs/5]
  The colrenderer tag now works as expected in Swing.

* [http://sourceforge.net/p/jguiraffe/bugs/4]
  Editable tree view components now work correctly in Swing.

* [http://sourceforge.net/p/jguiraffe/bugs/3]
  Editable combo boxes no longer throw an exception in Swing.

OTHER CHANGES
=============
* Colors now support a logic representation. This is useful for instance
  when dealing with style sheets. The serialization format and the
  string representation of class Color have changed.

* The dependency to Commons BeanUtils has been updated to version 1.9.2.
  (The older versions 1.8.3 still works.)

* The dependency to Commons Configuration has been updated to version 1.10.
  (The older versions 1.8 or 1.9 still work.)

Comprehensive documentation about the JGUIraffe library is available on
the project's web site
    http://jguiraffe.sourceforge.net/

A user's guide can be found at
    http://jguiraffe.sourceforge.net/jguiraffe/userguide/user_guide.html
