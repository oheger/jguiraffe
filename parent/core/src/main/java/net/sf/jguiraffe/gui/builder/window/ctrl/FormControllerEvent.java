/*
 * Copyright 2006-2025 The JGUIraffe Team.
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package net.sf.jguiraffe.gui.builder.window.ctrl;

import net.sf.jguiraffe.gui.builder.event.BuilderEvent;

/**
 * <p>
 * A base class for events generated by {@link FormController}.
 * </p>
 * <p>
 * {@link FormController} can fire several types of events, e.g. when a
 * validation is performed. Interested objects can register themselves as
 * listeners for these events. This class is the common base class for all
 * events generated by the {@link FormController} class. It provides access to
 * the {@link FormController} instance which is the source of this event.
 * </p>
 *
 * @author Oliver Heger
 * @version $Id: FormControllerEvent.java 205 2012-01-29 18:29:57Z oheger $
 */
public class FormControllerEvent extends BuilderEvent
{
    /**
     * The serial version UID.
     */
    private static final long serialVersionUID = 20091209L;

    /**
     * Creates a new instance of {@code FormControllerEvent} and initializes it
     * with the {@code FormController} which is the source of this event.
     *
     * @param source the source {@code FormController} (must not be <b>null</b>)
     * @throws IllegalArgumentException if the controller is <b>null</b>
     */
    public FormControllerEvent(FormController source)
    {
        super(source);
    }

    /**
     * Returns the {@code FormController} which generated this event.
     *
     * @return the {@code FormController} which is the source of this event
     */
    public FormController getFormController()
    {
        return (FormController) getSource();
    }
}
