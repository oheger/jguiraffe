<?xml version="1.0"?>
<!--

    Copyright 2006-2018 The JGUIraffe Team.

    Licensed under the Apache License, Version 2.0 (the "License")
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!-- $Id$ -->
<document>

  <properties>
    <author email="oheger@apache.org">Oliver Heger</author>
    <title>JGuiraffe JavaFX Integration</title>
  </properties>

<body>
  <section name="JGUIraffe JavaFX Integration">
  <p>
    This module implements the builder interfaces defined by the
    <a href="../jguiraffe/index.html">Core project</a> using the Java FX platform.
    For this to work, the JavaFX library must be present on the class path.
  </p>
  <p>
    In Maven projects this module can be added using the following
    dependencies:
  </p>
<source><![CDATA[
  ...
  <!-- Import JGUIraffe BOM -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>net.sf.jguiraffe</groupId>
        <artifactId>jguiraffe-bom</artifactId>
        <version>1.3.1</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>

    <dependency>
      <groupId>net.sf.jguiraffe</groupId>
      <artifactId>jguiraffe-java-fx</artifactId>
    </dependency>
    ...
]]></source>

  <subsection name="Limitations">
  <p>
    With Swing being the most popular UI platform for Java, the programming
    model of <em>JGUIraffe</em> has been mainly inspired by this library.
    JavaFX is in principle similar to Swing; therefore, in most cases, it was
    not too dificult to implement the abstractions of <em>JGUIraffe</em> on top
    of JavaFX. There is only one feature which is not available on JavaFX:
    desktop panes. A desktop pane was used in Swing to simulate application-level
    windows which could be dragged only within the limits of the application's
    desktop. JavaFX does not have a corresponding concept. Therefore, the method
    <code>createDesktopPane()</code> of the JavaFX-specific implementation of
    <code>ComponentManager</code> only throws an <code>UnsupportedOperationException</code>
    exception. Note that it is still possible to create internal frames; they
    are represented by plain JavaFX <code>Stage</code> objects.
  </p>
  <p>
    JavaFX has rich support for special graphical effects. These are currently
    not supported by <em>JGUIraffe</em>. (They are special to JavaFX, and
    <em>JGUIraffe</em> aims to be a common denominator for UI platforms.)
    However, it is intended that later versions will provide specialized tags
    allowing to add effects to JavaFX UI elements in a declarative way.
  </p>
  </subsection>
  </section>
</body>
</document>
